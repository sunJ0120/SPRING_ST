plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.6'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'sunJ'
version = '0.0.1-SNAPSHOT'
description = 'coffeee'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	// Spring AI Milestone 및 Snapshot 저장소 추가
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// env 읽기
	implementation 'me.paulschwarz:spring-dotenv:4.0.0'

	// QueryDSL 설정
	implementation("com.querydsl:querydsl-jpa:5.0.0:jakarta")
	annotationProcessor("com.querydsl:querydsl-apt:5.0.0:jakarta")
	annotationProcessor("jakarta.annotation:jakarta.annotation-api")
	annotationProcessor("jakarta.persistence:jakarta.persistence-api")

	// Spring AI BOM (버전 관리)
	implementation platform('org.springframework.ai:spring-ai-bom:1.0.0-M2')
	// Spring AI Core
	implementation 'org.springframework.ai:spring-ai-core'
	// OpenAI (GPT 모델 사용 시)
	implementation 'org.springframework.ai:spring-ai-openai-spring-boot-starter'
}

tasks.named('test') {
	useJUnitPlatform()
}

// QueryDSL 설정, 한 번 비워주고 Q클래스가 생길 수 있도록 해야 한다.
clean {
	delete file('src/main/generated')
	delete file('build/generated')
}

